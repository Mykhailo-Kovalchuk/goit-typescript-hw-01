"use strict";
// ТИПІЗАЦІЯ ПРОСТИХ ТИПІВ ДАНИХ
// явна типізація. через двокрпку прописуємо явно який тип даних очікуємо
let total = 100;
let firstName = "Bobo";
let isActive = false;
let empty = null;
let undef = undefined;
// неявна типізація. через двокрпку НЕ прописуємо явно який тип даних очікуємо, але TS під капотом собі сам присвоїть правильний тип (розкоментовуючи бачимо помилку)
let age = 10;
// age = "123"
// Неявна типізація на всі 100% надійна, тому краще завжи прописувати явно 
// ТИПІЗАЦІЯ СКЛАДНИХ ТИПІВ ДАНИХ
// Масиви
const numbers = [1, 2, 3, 4, "50", false]; // очікуємо масив чисел (якщо явно не вказати типізацію і передати різні типи даних, ts не зрозуміє що там повинно бути)
// const numbers: number[] = [1, 2, 3, 4, "50", false];  // розкоментуй і буде помилка
const numbersArr = [1, 2, 3, 4, 5]; // тепер все гуд.
// якщо є помилка з типізацією методи масиву не спрацюють.
// numbersArr.push('12'); // очікуючи рядок ми не можемо додати його в масив чисел // розкоментуй і буде помилка
// Об`єкти
// для роботи з об`єктом використовуємо type
const user = {
    name: "Bob",
    age: 12
};
const userTS = {
    name: "Bobby",
    age: 20
};
const userTS2 = {
    name: "Ann",
    age: 30
};
function add(num1, num2) {
    return num1 + num2;
}
add(1, 1);
//# sourceMappingURL=index.js.map